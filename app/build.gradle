plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.org.jetbrains.kotlin.android)
    alias(libs.plugins.jetbrainsKotlinSerialization)
    alias(libs.plugins.compose.compiler)
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'

}

android {
    namespace 'com.snister.carnagealpha'
    compileSdk 34

    defaultConfig {
        applicationId "com.snister.carnagealpha"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.firebase.messaging
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    // Splash Screen API
    implementation libs.androidx.core.splashscreen

    // Compose Navigation
    implementation libs.androidx.navigation.compose

    // Dagger Hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose

    // Koin
    implementation libs.koin.android
    implementation libs.koin.core
    implementation libs.koin.androidx.compose

    // Kotlinx Serialization
    implementation libs.kotlinx.serialization.json

    // Okhttp
    implementation libs.okhttp

    // Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson

    // Coil : Coroutine Image Loader
    implementation libs.coil.compose

    // Datastore : SharedPreferences like
    implementation libs.androidx.datastore.preferences

    // Compose Foundation
    implementation libs.androidx.foundation

    // Paging v3
    implementation libs.androidx.paging.runtime
    implementation libs.androidx.paging.compose

    // Room
    implementation libs.androidx.room.runtime
    //noinspection KaptUsageInsteadOfKsp
    implementation libs.androidx.room.ktx
    kapt libs.androidx.room.compiler

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.5.0-alpha02"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation libs.androidx.camera.core
    implementation libs.androidx.camera.camera2
    // If you want to additionally use the CameraX Lifecycle library
    implementation libs.androidx.camera.lifecycle
    // If you want to additionally use the CameraX VideoCapture library
    implementation libs.androidx.camera.video
    // If you want to additionally use the CameraX View class
    implementation libs.androidx.camera.view
    // If you want to additionally add CameraX ML Kit Vision Integration
    implementation libs.androidx.camera.mlkit.vision
    // If you want to additionally use the CameraX Extensions library
    implementation libs.androidx.camera.extensions

    // VICO
    implementation libs.vico.compose
    implementation libs.vico.compose.m2
    implementation libs.vico.compose.m3
    implementation libs.vico.core

    // Import the Firebase BoM
    implementation platform(libs.firebase.bom)

    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation libs.firebase.analytics

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}
